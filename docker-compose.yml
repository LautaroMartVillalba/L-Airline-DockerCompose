services:
# # ---------------POSTGRES-----------------
  postgres:
    image: lautaromvillalba/postgres-custom:v1
    restart: always
    shm_size: 128mb
    container_name: database
    volumes:
      - postgres_persist:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USER}
      POSTGRES_DB: airline
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "airline" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      airline_net:

# ---------------NEO4J-----------------
  neo4j:
    image: lautaromvillalba/neo4j-custom:v1
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_persist:/data
    environment:
      - NEO4J_AUTH=${NEO4JDB}/${NEO4JPASS}
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_default__advertised__address=neo4j
    networks:
      airline_net:

# ---------------VAULT-----------------
  vault-custom:
    image: lautaromvillalba/custom-vault
    container_name: vault-custom
    environment:
      VAULT_ADDR: http://vault-custom:8200
    volumes:
      - vault_persist:/vault/file:rw
      - ./vault:/vault/config:rw
    cap_add:
      - IPC_LOCK
    entrypoint: /bin/sh -c "vault server -config=/vault/config/config.json & /vault/config/unseal.sh; wait $!"
    networks:
      airline_net:

# ---------------EUREKA-----------------
  eureka:
    image: lautaromvillalba/eureka:v1.2
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      airline_net:

# ---------------GATEWAY-----------------
  gateway:
    image: lautaromvillalba/gateway:v1.2
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
      - spring.cloud.vault.token=${TOKEN}
      - spring.cloud.vault.host=vault-custom
      - spring.cloud.vault.port=8200
      - spring.cloud.vault.scheme=http
      - spring.cloud.vault.authentication=TOKEN
      - spring.cloud.vault.kv.backend=kv
      - spring.cloud.vault.kv.default-context=database
      - spring.cloud.vault.kv.application-name=database
      - spring.cloud.vault.kv.enabled=true
    networks:
      airline_net:

# ---------------JWT-USER-----------------
  jwt-user:
    image: lautaromvillalba/user:V1.3
    container_name: jwt-user
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
      - spring.cloud.vault.token= ${TOKEN}
    networks:
      airline_net:

# ---------------HOTEL-----------------
  hotel:
    image: lautaromvillalba/hotel:v1.3
    container_name: hotel
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
      - spring.cloud.vault.token= ${TOKEN}
    networks:
      airline_net:

# ---------------FLIGHT-----------------
  flight:
    image: flightprueba
    container_name: flight
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
      - spring.cloud.vault.token= ${TOKEN}
    networks:
      airline_net:

volumes:
  postgres_persist:
  vault_persist:
  neo4j_persist:

networks:
  airline_net:
